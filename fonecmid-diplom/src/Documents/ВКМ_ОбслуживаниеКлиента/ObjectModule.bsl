#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий 

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ВыполненныеРаботы.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьПользователю(
			Нстр("ru = ""Нет выполненных работ"""), , "ВыполненныеРаботы", 
			"Объект", Отказ);
	КонецЕсли;
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, 
		"ВидДоговора, ВКМ_ДатаНачалаДействияДоговора, ВКМ_ДатаОкончанияДействияДоговора");
	
	Если РеквизитыДокумента.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		ОбщегоНазначения.СообщитьПользователю(
			Нстр("ru = ""Договор не является договором абонентского обслуживания"""), , "Договор", 
			"Объект", Отказ);
	ИначеЕсли Дата < РеквизитыДокумента.ВКМ_ДатаНачалаДействияДоговора 
		Или Дата > РеквизитыДокумента.ВКМ_ДатаОкончанияДействияДоговора Тогда
		ОбщегоНазначения.СообщитьПользователю(
			Нстр("ru = ""Договор не действителен на эту дату"""), , "Договор", 
			"Объект", Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ,Режим)

	ЧасовКОплате = ВыполненныеРаботы.Итог("ЧасыКОплатеКлиенту");
	СтавкаЧаса = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_СтоимостьЧасаРаботыСпециалиста");
	
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
	Движение.Период = Дата;
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Клиент = Клиент;
	Движение.Договор = Договор;
	Движение.КоличествоЧасов = ЧасовКОплате;
	Движение.СуммаКОплате = ЧасовКОплате * СтавкаЧаса;

КонецПроцедуры

#КонецОбласти 

#КонецЕсли

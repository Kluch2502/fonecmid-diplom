
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

КонецПроцедуры

Процедура ВКМ_ВыполнитьАвтозаполнение() Экспорт
	
	НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	
	Если Не ЗначениеЗаполнено(НоменклатураАбонентскаяПлата)
		Или Не ЗначениеЗаполнено(НоменклатураРаботыСпециалиста) Тогда
			
		Отказ = Истина;
		Текст = "Для автозаполнения необходимо заполнить константы НоменклатураАбонентскаяПлата и НоменклатураРаботыСпециалиста";
		ОбщегоНазначения.СообщитьПользователю(Текст,,,,Отказ);
		ЖурналРегистрации.ДобавитьСообщениеДляЖурналаРегистрации(Текст, УровеньЖурналаРегистрации.Ошибка,,,
			"Документ не проведен");
		Возврат;
		
	КонецЕсли;
	
	Услуги.Очистить();
	
	СуммаАбонентскойПлаты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_СуммаЕжемесячнойАбонентскойПлаты");
	
	Если СуммаАбонентскойПлаты <> 0 Тогда 
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = НоменклатураАбонентскаяПлата;
		НоваяСтрока.Количество = 1;
		НоваяСтрока.Цена = СуммаАбонентскойПлаты;
		НоваяСтрока.Сумма = СуммаАбонентскойПлаты;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ВКМ_ВыполненныеКлиентуРаботыОстатки.КоличествоЧасовОстаток), 0) КАК КоличествоЧасовОстаток,
		|	ЕСТЬNULL(СУММА(ВКМ_ВыполненныеКлиентуРаботыОстатки.СуммаКОплатеОстаток), 0) КАК СуммаКОплатеОстаток
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Остатки(&КонецМесяца, Договор = &Договор
		|	И Клиент = &Клиент) КАК ВКМ_ВыполненныеКлиентуРаботыОстатки";
	
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("Клиент", Контрагент);
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Если Выборка.Следующий() Тогда
			Если Выборка.СуммаКОплатеОстаток <> 0 Тогда
				НоваяСтрока = Услуги.Добавить();
				НоваяСтрока.Номенклатура = НоменклатураРаботыСпециалиста;
				НоваяСтрока.Количество = Выборка.КоличествоЧасовОстаток;
				НоваяСтрока.Сумма = Выборка.СуммаКОплатеОстаток;
				НоваяСтрока.Цена = ?(НоваяСтрока.Количество = 0, 0, НоваяСтрока.Сумма / НоваяСтрока.Количество);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	СуммаДокумента = Услуги.Итог("Сумма");
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
